{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "exampleResponse": {
      "topics": [{ "topic": "topic", "description": "description" }]
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all articles",
    "queries": ["topic", "sort_by", "order", "limit", "p"],
    "exampleResponse": {
      "articles": [
        {
          "article_id": 1,
          "title": "title",
          "topic": "topic",
          "author": "author",
          "created_at": "2018-05-30T15:59:13.341Z",
          "article_img_url": "http://images.some.url/path",
          "total_count": "1"
        }
      ]
    }
  },
  "GET /api/articles/:article_id": {
    "description": "serves up the article found using :article_id parametric endpoint",
    "exampleResponse": {
      "article": [
        {
          "article_id": 1,
          "title": "title",
          "topic": "topic",
          "author": "author",
          "body": "body",
          "created_at": "2020-07-09T20:11:00.000Z",
          "votes": 100,
          "article_img_url": "http://images.some.url/path"
        }
      ]
    }
  },
  "GET /api/articles/:article_id/comments": {
    "description": "serves an array of all comments for provided article_id",
    "queries": ["limit", "p"],
    "exampleResponse": {
      "comments": [
        {
          "comment_id": 1,
          "body": "body",
          "article_id": 1,
          "author": "author",
          "votes": 0,
          "created_at": "2021-14-03T21:00:00.000Z"
        }
      ]
    }
  },
  "PATCH /api/articles/:article_id": {
    "description": "Updates the votes value of a chosen article",
    "exampleResponse": {
      "article": [
        {
          "article_id": 1,
          "title": "title",
          "topic": "topic",
          "author": "author",
          "body": "body",
          "created_at": "2020-07-09T20:11:00.000Z",
          "votes": 1,
          "article_img_url": "http://images.some.url/path"
        }
      ]
    },
    "exampleRequest": {
      "inc_votes": 1
    }
  },
  "POST /api/articles/:article_id/comments": {
    "description": "posts a comment to article given using article_id",
    "exampleResponse": {
      "comment": {
        "comment_id": 1,
        "author": "author",
        "body": "body"
      }
    },
    "exampleRequest": {
      "username": "username",
      "body": "body"
    }
  },
  "DELETE /api/comments/:comment_id": {
    "description": "deletes a comment using provided comment_id"
  },
  "GET /api/users": {
    "description": "returns an array of all user objects",
    "exampleResponse": {
      "users": [
        {
          "username": "username",
          "name": "name",
          "avatar_url": "https://this.url/path"
        },
        {
          "username": "username",
          "name": "name",
          "avatar_url": "https://this.url/path"
        }
      ]
    }
  },
  "GET /api/users/:username": {
    "description": "returns the specified user object",
    "exampleResponse": {
      "username": "username",
      "avatar_url": "https://this.url/path",
      "name": "name"
    }
  },
  "PATCH /api/comments/:comment_id": {
    "description": "Updates the votes value of a chosen comment",
    "exampleResponse": {
      "comment": {
        "comment_id": 1,
        "body": "body",
        "votes": 1,
        "author": "author",
        "article_id": 1,
        "created_at": "2020-04-06T12:17:00.000Z"
      }
    },
    "exampleRequest": { "inc_votes": 1 }
  },
  "POST /api/articles": {
    "description": "Creates a new article",
    "exampleResponse": {
      "article": {
        "article_id": 1,
        "votes": 0,
        "created_at": "TIME",
        "comment_count": 0
      }
    },
    "exampleRequest": {
      "author": "author",
      "title": "title",
      "body": "body",
      "topic": "topic",
      "article_img_url": "http://images.some.url/path"
    }
  },
  "POST /api/topics": {
    "description": "creates a new topic using request body",
    "exampleRequest": {
      "slug": "topic",
      "description": "description"
    },
    "exampleResponse": {
      "topic": {
        "slug": "topic",
        "description": "description"
      }
    }
  },
  "DELETE /api/articles/:article_id": {
    "description": "deletes an article using the provided article_id"
  }
}
